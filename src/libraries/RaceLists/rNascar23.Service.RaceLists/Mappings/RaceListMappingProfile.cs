using AutoMapper;
using rNascar23.RaceLists.Models;
using rNascar23.Service.RaceLists.Data.Models;

namespace rNascar23.Service.RaceLists.Mappings
{
    internal class RaceListMappingProfile : Profile
    {
        public RaceListMappingProfile()
        {
            CreateMap<RaceListModel, RaceList>()
                .ForMember(m => m.CupSeries, opts => opts.MapFrom(src => src.series_1))
                .ForMember(m => m.XfinitySeries, opts => opts.MapFrom(src => src.series_2))
                .ForMember(m => m.TruckSeries, opts => opts.MapFrom(src => src.series_3))
                .ReverseMap();

            CreateMap<Series_1Model, Series>()
                .ForMember(m => m.actual_distance, opts => opts.MapFrom(src => src.actual_distance))
                .ForMember(m => m.actual_laps, opts => opts.MapFrom(src => src.actual_laps))
                .ForMember(m => m.attendance, opts => opts.MapFrom(src => src.attendance))
                .ForMember(m => m.average_speed, opts => opts.MapFrom(src => src.average_speed))
                .ForMember(m => m.date_scheduled, opts => opts.MapFrom(src => src.date_scheduled))
                .ForMember(m => m.has_qualifying, opts => opts.MapFrom(src => src.has_qualifying))
                .ForMember(m => m.infractions, opts => opts.MapFrom(src => src.infractions))
                .ForMember(m => m.inspection_complete, opts => opts.MapFrom(src => src.inspection_complete))
                .ForMember(m => m.is_qualifying_race, opts => opts.MapFrom(src => src.is_qualifying_race))
                .ForMember(m => m.margin_of_victory, opts => opts.MapFrom(src => src.margin_of_victory))
                .ForMember(m => m.master_race_id, opts => opts.MapFrom(src => src.master_race_id))
                .ForMember(m => m.number_of_cars_in_field, opts => opts.MapFrom(src => src.number_of_cars_in_field))
                .ForMember(m => m.number_of_caution_laps, opts => opts.MapFrom(src => src.number_of_caution_laps))
                .ForMember(m => m.number_of_cautions, opts => opts.MapFrom(src => src.number_of_cautions))
                .ForMember(m => m.number_of_lead_changes, opts => opts.MapFrom(src => src.number_of_lead_changes))
                .ForMember(m => m.number_of_leaders, opts => opts.MapFrom(src => src.number_of_leaders))
                .ForMember(m => m.playoff_round, opts => opts.MapFrom(src => src.playoff_round))
                .ForMember(m => m.pole_winner_driver_id, opts => opts.MapFrom(src => src.pole_winner_driver_id))
                .ForMember(m => m.pole_winner_laptime, opts => opts.MapFrom(src => src.pole_winner_laptime))
                .ForMember(m => m.pole_winner_speed, opts => opts.MapFrom(src => src.pole_winner_speed))
                .ForMember(m => m.qualifying_date, opts => opts.MapFrom(src => src.qualifying_date))
                .ForMember(m => m.qualifying_race_id, opts => opts.MapFrom(src => src.qualifying_race_id))
                .ForMember(m => m.qualifying_race_no, opts => opts.MapFrom(src => src.qualifying_race_no))
                .ForMember(m => m.race_comments, opts => opts.MapFrom(src => src.race_comments))
                .ForMember(m => m.race_date, opts => opts.MapFrom(src => src.race_date))
                .ForMember(m => m.race_id, opts => opts.MapFrom(src => src.race_id))
                .ForMember(m => m.race_name, opts => opts.MapFrom(src => src.race_name))
                .ForMember(m => m.race_purse, opts => opts.MapFrom(src => src.race_purse))
                .ForMember(m => m.race_season, opts => opts.MapFrom(src => src.race_season))
                .ForMember(m => m.race_type_id, opts => opts.MapFrom(src => src.race_type_id))
                .ForMember(m => m.radio_broadcaster, opts => opts.MapFrom(src => src.radio_broadcaster))
                .ForMember(m => m.restrictor_plate, opts => opts.MapFrom(src => src.restrictor_plate))
                .ForMember(m => m.satellite_radio_broadcaster, opts => opts.MapFrom(src => src.satellite_radio_broadcaster))
                .ForMember(m => m.schedule, opts => opts.MapFrom(src => src.schedule))
                .ForMember(m => m.scheduled_distance, opts => opts.MapFrom(src => src.scheduled_distance))
                .ForMember(m => m.scheduled_laps, opts => opts.MapFrom(src => src.scheduled_laps))
                .ForMember(m => m.series_id, opts => opts.MapFrom(src => src.series_id))
                .ForMember(m => m.SeriesName, opts => opts.MapFrom(src => src.series_id == 1 ?
                                                                   "Cup Series" : src.series_id == 2 ?
                                                                   "Xfinity Series" : src.series_id == 3 ?
                                                                   "Craftsman Truck Series" : "Unknown"))
                .ForMember(m => m.stage_1_laps, opts => opts.MapFrom(src => src.stage_1_laps))
                .ForMember(m => m.stage_2_laps, opts => opts.MapFrom(src => src.stage_2_laps))
                .ForMember(m => m.stage_3_laps, opts => opts.MapFrom(src => src.stage_3_laps))
                .ForMember(m => m.television_broadcaster, opts => opts.MapFrom(src => src.television_broadcaster))
                .ForMember(m => m.total_race_time, opts => opts.MapFrom(src => src.total_race_time))
                .ForMember(m => m.track_id, opts => opts.MapFrom(src => src.track_id))
                .ForMember(m => m.track_name, opts => opts.MapFrom(src => src.track_name))
                .ForMember(m => m.tunein_date, opts => opts.MapFrom(src => src.tunein_date))
                .ForMember(m => m.winner_driver_id, opts => opts.MapFrom(src => src.winner_driver_id));

            CreateMap<Series_2Model, Series>()
                .ForMember(m => m.actual_distance, opts => opts.MapFrom(src => src.actual_distance))
                .ForMember(m => m.actual_laps, opts => opts.MapFrom(src => src.actual_laps))
                .ForMember(m => m.attendance, opts => opts.MapFrom(src => src.attendance))
                .ForMember(m => m.average_speed, opts => opts.MapFrom(src => src.average_speed))
                .ForMember(m => m.date_scheduled, opts => opts.MapFrom(src => src.date_scheduled))
                .ForMember(m => m.has_qualifying, opts => opts.MapFrom(src => src.has_qualifying))
                .ForMember(m => m.infractions, opts => opts.MapFrom(src => src.infractions))
                .ForMember(m => m.inspection_complete, opts => opts.MapFrom(src => src.inspection_complete))
                .ForMember(m => m.is_qualifying_race, opts => opts.MapFrom(src => src.is_qualifying_race))
                .ForMember(m => m.margin_of_victory, opts => opts.MapFrom(src => src.margin_of_victory))
                .ForMember(m => m.master_race_id, opts => opts.MapFrom(src => src.master_race_id))
                .ForMember(m => m.number_of_cars_in_field, opts => opts.MapFrom(src => src.number_of_cars_in_field))
                .ForMember(m => m.number_of_caution_laps, opts => opts.MapFrom(src => src.number_of_caution_laps))
                .ForMember(m => m.number_of_cautions, opts => opts.MapFrom(src => src.number_of_cautions))
                .ForMember(m => m.number_of_lead_changes, opts => opts.MapFrom(src => src.number_of_lead_changes))
                .ForMember(m => m.number_of_leaders, opts => opts.MapFrom(src => src.number_of_leaders))
                .ForMember(m => m.playoff_round, opts => opts.MapFrom(src => src.playoff_round))
                .ForMember(m => m.pole_winner_driver_id, opts => opts.MapFrom(src => src.pole_winner_driver_id))
                .ForMember(m => m.pole_winner_laptime, opts => opts.MapFrom(src => src.pole_winner_laptime))
                .ForMember(m => m.pole_winner_speed, opts => opts.MapFrom(src => src.pole_winner_speed))
                .ForMember(m => m.qualifying_date, opts => opts.MapFrom(src => src.qualifying_date))
                .ForMember(m => m.qualifying_race_id, opts => opts.MapFrom(src => src.qualifying_race_id))
                .ForMember(m => m.qualifying_race_no, opts => opts.MapFrom(src => src.qualifying_race_no))
                .ForMember(m => m.race_comments, opts => opts.MapFrom(src => src.race_comments))
                .ForMember(m => m.race_date, opts => opts.MapFrom(src => src.race_date))
                .ForMember(m => m.race_id, opts => opts.MapFrom(src => src.race_id))
                .ForMember(m => m.race_name, opts => opts.MapFrom(src => src.race_name))
                .ForMember(m => m.race_purse, opts => opts.MapFrom(src => src.race_purse))
                .ForMember(m => m.race_season, opts => opts.MapFrom(src => src.race_season))
                .ForMember(m => m.race_type_id, opts => opts.MapFrom(src => src.race_type_id))
                .ForMember(m => m.radio_broadcaster, opts => opts.MapFrom(src => src.radio_broadcaster))
                .ForMember(m => m.restrictor_plate, opts => opts.MapFrom(src => src.restrictor_plate))
                .ForMember(m => m.satellite_radio_broadcaster, opts => opts.MapFrom(src => src.satellite_radio_broadcaster))
                .ForMember(m => m.schedule, opts => opts.MapFrom(src => src.schedule))
                .ForMember(m => m.scheduled_distance, opts => opts.MapFrom(src => src.scheduled_distance))
                .ForMember(m => m.scheduled_laps, opts => opts.MapFrom(src => src.scheduled_laps))
                .ForMember(m => m.series_id, opts => opts.MapFrom(src => src.series_id))
                .ForMember(m => m.SeriesName, opts => opts.MapFrom(src => src.series_id == 1 ?
                                                                   "Cup Series" : src.series_id == 2 ?
                                                                   "Xfinity Series" : src.series_id == 3 ?
                                                                   "Craftsman Truck Series" : "Unknown"))
                .ForMember(m => m.stage_1_laps, opts => opts.MapFrom(src => src.stage_1_laps))
                .ForMember(m => m.stage_2_laps, opts => opts.MapFrom(src => src.stage_2_laps))
                .ForMember(m => m.stage_3_laps, opts => opts.MapFrom(src => src.stage_3_laps))
                .ForMember(m => m.television_broadcaster, opts => opts.MapFrom(src => src.television_broadcaster))
                .ForMember(m => m.total_race_time, opts => opts.MapFrom(src => src.total_race_time))
                .ForMember(m => m.track_id, opts => opts.MapFrom(src => src.track_id))
                .ForMember(m => m.track_name, opts => opts.MapFrom(src => src.track_name))
                .ForMember(m => m.tunein_date, opts => opts.MapFrom(src => src.tunein_date))
                .ForMember(m => m.winner_driver_id, opts => opts.MapFrom(src => src.winner_driver_id));

            CreateMap<Series_3Model, Series>()
                .ForMember(m => m.actual_distance, opts => opts.MapFrom(src => src.actual_distance))
                .ForMember(m => m.actual_laps, opts => opts.MapFrom(src => src.actual_laps))
                .ForMember(m => m.attendance, opts => opts.MapFrom(src => src.attendance))
                .ForMember(m => m.average_speed, opts => opts.MapFrom(src => src.average_speed))
                .ForMember(m => m.date_scheduled, opts => opts.MapFrom(src => src.date_scheduled))
                .ForMember(m => m.has_qualifying, opts => opts.MapFrom(src => src.has_qualifying))
                .ForMember(m => m.infractions, opts => opts.MapFrom(src => src.infractions))
                .ForMember(m => m.inspection_complete, opts => opts.MapFrom(src => src.inspection_complete))
                .ForMember(m => m.is_qualifying_race, opts => opts.MapFrom(src => src.is_qualifying_race))
                .ForMember(m => m.margin_of_victory, opts => opts.MapFrom(src => src.margin_of_victory))
                .ForMember(m => m.master_race_id, opts => opts.MapFrom(src => src.master_race_id))
                .ForMember(m => m.number_of_cars_in_field, opts => opts.MapFrom(src => src.number_of_cars_in_field))
                .ForMember(m => m.number_of_caution_laps, opts => opts.MapFrom(src => src.number_of_caution_laps))
                .ForMember(m => m.number_of_cautions, opts => opts.MapFrom(src => src.number_of_cautions))
                .ForMember(m => m.number_of_lead_changes, opts => opts.MapFrom(src => src.number_of_lead_changes))
                .ForMember(m => m.number_of_leaders, opts => opts.MapFrom(src => src.number_of_leaders))
                .ForMember(m => m.playoff_round, opts => opts.MapFrom(src => src.playoff_round))
                .ForMember(m => m.pole_winner_driver_id, opts => opts.MapFrom(src => src.pole_winner_driver_id))
                .ForMember(m => m.pole_winner_laptime, opts => opts.MapFrom(src => src.pole_winner_laptime))
                .ForMember(m => m.pole_winner_speed, opts => opts.MapFrom(src => src.pole_winner_speed))
                .ForMember(m => m.qualifying_date, opts => opts.MapFrom(src => src.qualifying_date))
                .ForMember(m => m.qualifying_race_id, opts => opts.MapFrom(src => src.qualifying_race_id))
                .ForMember(m => m.qualifying_race_no, opts => opts.MapFrom(src => src.qualifying_race_no))
                .ForMember(m => m.race_comments, opts => opts.MapFrom(src => src.race_comments))
                .ForMember(m => m.race_date, opts => opts.MapFrom(src => src.race_date))
                .ForMember(m => m.race_id, opts => opts.MapFrom(src => src.race_id))
                .ForMember(m => m.race_name, opts => opts.MapFrom(src => src.race_name))
                .ForMember(m => m.race_purse, opts => opts.MapFrom(src => src.race_purse))
                .ForMember(m => m.race_season, opts => opts.MapFrom(src => src.race_season))
                .ForMember(m => m.race_type_id, opts => opts.MapFrom(src => src.race_type_id))
                .ForMember(m => m.radio_broadcaster, opts => opts.MapFrom(src => src.radio_broadcaster))
                .ForMember(m => m.restrictor_plate, opts => opts.MapFrom(src => src.restrictor_plate))
                .ForMember(m => m.satellite_radio_broadcaster, opts => opts.MapFrom(src => src.satellite_radio_broadcaster))
                .ForMember(m => m.schedule, opts => opts.MapFrom(src => src.schedule))
                .ForMember(m => m.scheduled_distance, opts => opts.MapFrom(src => src.scheduled_distance))
                .ForMember(m => m.scheduled_laps, opts => opts.MapFrom(src => src.scheduled_laps))
                .ForMember(m => m.series_id, opts => opts.MapFrom(src => src.series_id))
                .ForMember(m => m.SeriesName, opts => opts.MapFrom(src => src.series_id == 1 ?
                                                                   "Cup Series" : src.series_id == 2 ?
                                                                   "Xfinity Series" : src.series_id == 3 ?
                                                                   "Craftsman Truck Series" : "Unknown"))
                .ForMember(m => m.stage_1_laps, opts => opts.MapFrom(src => src.stage_1_laps))
                .ForMember(m => m.stage_2_laps, opts => opts.MapFrom(src => src.stage_2_laps))
                .ForMember(m => m.stage_3_laps, opts => opts.MapFrom(src => src.stage_3_laps))
                .ForMember(m => m.television_broadcaster, opts => opts.MapFrom(src => src.television_broadcaster))
                .ForMember(m => m.total_race_time, opts => opts.MapFrom(src => src.total_race_time))
                .ForMember(m => m.track_id, opts => opts.MapFrom(src => src.track_id))
                .ForMember(m => m.track_name, opts => opts.MapFrom(src => src.track_name))
                .ForMember(m => m.tunein_date, opts => opts.MapFrom(src => src.tunein_date))
                .ForMember(m => m.winner_driver_id, opts => opts.MapFrom(src => src.winner_driver_id));

            CreateMap<ScheduleModel, Schedule>()
                .ForMember(m => m.EventName, opts => opts.MapFrom(src => src.event_name))
                .ForMember(m => m.RunType, opts => opts.MapFrom(src => src.run_type))
                .ForMember(m => m.StartTimeUtc, opts => opts.MapFrom(src => src.start_time_utc))
                .ForMember(m => m.Notes, opts => opts.MapFrom(src => src.notes))
                .ReverseMap();

            CreateMap<Schedule1Model, Schedule>()
                .ForMember(m => m.EventName, opts => opts.MapFrom(src => src.event_name))
                .ForMember(m => m.RunType, opts => opts.MapFrom(src => src.run_type))
                .ForMember(m => m.StartTimeUtc, opts => opts.MapFrom(src => src.start_time_utc))
                .ForMember(m => m.Notes, opts => opts.MapFrom(src => src.notes))
                .ReverseMap();

            CreateMap<Schedule2Model, Schedule>()
                .ForMember(m => m.EventName, opts => opts.MapFrom(src => src.event_name))
                .ForMember(m => m.RunType, opts => opts.MapFrom(src => src.run_type))
                .ForMember(m => m.StartTimeUtc, opts => opts.MapFrom(src => src.start_time_utc))
                .ForMember(m => m.Notes, opts => opts.MapFrom(src => src.notes))
                .ReverseMap();
        }
    }
}